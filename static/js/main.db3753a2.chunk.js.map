{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","searchString","onSearchChange","evt","target","value","setState","props","getSearchStr","type","placeholder","onChange","this","React","Component","ItemStatusFilter","filterString","activeClass","getFilteredItems","dataset","filter","showFilteredItems","btnGroupChildren","parentElement","children","Array","from","forEach","el","onClick","data-filter","TodoListItem","label","onDeleted","important","onToggleImportant","onToggleDone","classNames","TodoList","data","elements","map","item","id","itemProps","key","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdd","required","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","slice","addItem","text","newItem","toggleProperty","search","length","toLowerCase","includes","filterItems","visibleItem","arr","propName","oldItem","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db3753a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n    return (\r\n        <section className='app-header d-flex'>\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            searchString: ''\r\n        };\r\n\r\n        this.onSearchChange = (evt) => {\r\n            const searchString = evt.target.value;\r\n            this.setState({ searchString });\r\n            this.props.getSearchStr(searchString);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <input \r\n        type='text'\r\n        className='form-control search-input' \r\n        placeholder='Search'\r\n        onChange={ this.onSearchChange }\r\n        value={this.state.searchString} />;\r\n    };\r\n}\r\n","import React from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            filterString: 'all'\r\n        }\r\n\r\n        this.activeClass = '';\r\n        this.getFilteredItems = (evt) => { \r\n            const filterString = evt.target.dataset.filter;\r\n            this.setState({ filterString });\r\n\r\n            this.props.showFilteredItems(filterString);\r\n\r\n            const btnGroupChildren = evt.target.parentElement.children;\r\n            Array.from(btnGroupChildren).forEach((el) => {\r\n                if (el.dataset.filter === filterString) {\r\n                    el.className = 'btn btn-info';\r\n                } else {\r\n                    el.className = 'btn btn-outline-secondary';\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='btn-group' onClick={this.getFilteredItems}>\r\n                <button type='button' \r\n                        className='btn btn-info'\r\n                        data-filter='all'>All</button>\r\n                <button type='button' \r\n                        className='btn btn-outline-secondary'\r\n                        data-filter='active'>Active</button>\r\n                <button type='button' \r\n                        className='btn btn-outline-secondary'\r\n                        data-filter='done'>Done</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport './todo-list-item.css'\r\n\r\nexport default class TodoListItem extends React.Component {\r\n    render() {\r\n        const { label, onDeleted, done, important, onToggleImportant, onToggleDone } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if(important) {\r\n            classNames += ' important';\r\n        }\r\n    \r\n        return (\r\n            <span className={classNames}>\r\n                <span\r\n                    className='todo-list-item-label'\r\n                    onClick={ onToggleDone }>\r\n                    {label}\r\n                </span>\r\n    \r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-success btn-sm float-right\"\r\n                        onClick={ onToggleImportant }>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n    \r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm float-right\"\r\n                        onClick={onDeleted}>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.css'\r\n\r\nconst TodoList = ({ data, onDeleted, onToggleImportant, onToggleDone }) => {\r\n    const elements = data.map((item) => {\r\n        const { id, ...itemProps} = item;\r\n\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <TodoListItem \r\n                    { ...itemProps }\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className='list-group todo-list'>\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            label: ''\r\n        }\r\n\r\n        this.onLabelChange = (evt) => {\r\n            this.setState({\r\n                label: evt.target.value\r\n            });\r\n        };\r\n\r\n        this.onSubmit = (evt) => {\r\n            evt.preventDefault();\r\n            this.props.onAdd(this.state.label);\r\n            this.setState({\r\n                label: ''\r\n            });\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className='item-add-form d-flex'\r\n                onSubmit={this.onSubmit}>\r\n                <input \r\n                    type='text'\r\n                    className='add-item-input form-control'\r\n                    placeholder='What needs to be done'\r\n                    required\r\n                    onChange={this.onLabelChange} \r\n                    value={this.state.label}/>\r\n                <button \r\n                    type='submit'\r\n                    className='btn btn-outline-info'>\r\n                    Add item\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n}","import React from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport ItemAddForm from '../item-add-form/item-add-form'\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            todoData: [\r\n                { label: 'Take advantage of this great app', important: false, done: true, id: 1 },\r\n                { label: 'Create new Todo', important: true, done: false, id: 2 },\r\n                this.createTodoItem('Drink Tea'),\r\n            ],\r\n            searchString: '',\r\n            filterString: 'all'\r\n        };\r\n\r\n        this.deleteItem = (id) => {\r\n            this.setState(({ todoData }) => {\r\n                const idx = todoData.findIndex((el)=> el.id === id);\r\n\r\n                const newArr = [\r\n                    ...todoData.slice(0, idx), \r\n                    ...todoData.slice(idx + 1)\r\n                ];\r\n\r\n                return {\r\n                    todoData: newArr\r\n                };\r\n            });\r\n        };\r\n\r\n        this.addItem = (text) => {\r\n            const newItem = this.createTodoItem(text);\r\n\r\n            this.setState(({ todoData }) => {\r\n                return {\r\n                    todoData: [...todoData, newItem]\r\n                };\r\n            });\r\n        };\r\n\r\n        this.onToggleImportant = (id) => {\r\n            this.setState(({ todoData }) => {\r\n                return {\r\n                    todoData: this.toggleProperty(todoData, id, 'important')\r\n                }\r\n            });\r\n        };\r\n\r\n        this.onToggleDone = (id) => {\r\n            this.setState(({ todoData }) => {\r\n                return {\r\n                    todoData: this.toggleProperty(todoData, id, 'done')\r\n                }\r\n            });\r\n        };\r\n\r\n        this.getSearchStr = (searchString) => {\r\n            this.setState({ searchString });\r\n        }\r\n\r\n        this.search = (todoData, searchString) => {\r\n            if (searchString.length === 0) {\r\n                return todoData;\r\n            }\r\n            const newArr = todoData.filter((el) => el.label.toLowerCase().includes(searchString.toLowerCase()));\r\n\r\n            return newArr;\r\n        };\r\n\r\n        this.showFilteredItems = (filterString) => {\r\n            this.setState({ filterString });\r\n        }\r\n\r\n        this.filterItems = (visibleItem, filterString) => {\r\n            switch (filterString) {\r\n                case 'all':\r\n                    return visibleItem;\r\n                case 'active':\r\n                    return visibleItem.filter((el) => !el.done);\r\n                case 'done':\r\n                    return visibleItem.filter((el) => el.done);\r\n                default:\r\n                    return visibleItem;\r\n            }\r\n        }\r\n    }\r\n\r\n    maxId = 100;\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = true;\r\n        const loginBox = <p>Log in please</p>;\r\n\r\n        const { todoData, searchString, filterString, } = this.state;\r\n        let visibleItem = this.filterItems(this.search(todoData, searchString), filterString);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className='todo-app'>\r\n                { isLoggedIn ? null : loginBox }\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel getSearchStr={ this.getSearchStr } />\r\n                    <ItemStatusFilter showFilteredItems={ this.showFilteredItems } />\r\n                </div>\r\n                <TodoList \r\n                    data={visibleItem}\r\n                    onDeleted={ this.deleteItem }\r\n                    onToggleImportant={ this.onToggleImportant }\r\n                    onToggleDone={ this.onToggleDone } />\r\n                <ItemAddForm onAdd={ this.addItem }/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}